Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding


1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =  10000 
ii. Business table =10000 
iii. Category table =10000 
iv. Checkin table =10000 
v. elite_years table =10000 
vi. friend table = 10000 
vii. hours table =10000 
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table =10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =10000
ii. Hours =2052 
iii. Category =2643 
iv. Attribute =1115 
v. Review ID=10000, Business_id=8090, User_id=9581
vi. Checkin = 493 
vii. Photo Id=10000, Business_id=6493
viii. Tip User_id=537 Business_ID=3979
ix. User = 10000
x. Friend = 11
xi. Elite_years =2780
2780
Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No
	
	
	SQL code used to arrive at answer:

	WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL 
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg: 3.7082  
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53 		avg:1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000 		avg:24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
select city, review_count
from business 
group by city
order by review_count desc
	
	
	Copy and Paste the Result Below:

+------------------------+--------------+
| city                   | review_count |
+------------------------+--------------+
| Woodmere Village       |          242 |
| Mount Lebanon          |          138 |
| Charlotte              |          120 |
| McMurray               |          112 |
| North York             |          109 |
| Enterprise             |           89 |
| Matthews               |           77 |
| Munroe Falls           |           74 |
| Ahwatukee              |           69 |
| Pittsburgh             |           68 |
| Woodmere               |           68 |
| Tolleson               |           65 |
| Pineville              |           63 |
| Carnegie               |           61 |
| Macedonia              |           58 |
| Markham                |           54 |
| Whitchurch-Stouffville |           52 |
| Windsor                |           50 |
| Goodyear               |           49 |
| Gibsonia               |           45 |
| Summerlin              |           44 |
| Peninsula              |           42 |
| Richfield              |           42 |
| Dormont                |           40 |
| nboulder city          |           40 |
+------------------------+--------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:select stars,
    sum(review_count) as count
from business
where city='Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:
select stars,
    sum(review_count) as count
from business
where city='Beachwood'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select  name, review_count
from user
order by review_count desc
	
		
	Copy and Paste the Result Below:
		
+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	I dont think there is a solid correlation between fans and review count, but I will say that logically both should come hand in hand but several other factors should also be taken into account such as quality of a reviews, number of reviews per week
	The more active member vs someone who has been on Yelp from day one should have a better fan base.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
Love is found 1780 times while hate is found 232 times

	SQL code used to arrive at answer:
select count(*)
from review 
where text like "%love%" 
select count(*)
from review 
where text like "%hate%" 
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
select name, fans
from user
order by fans desc
limit 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.


i. Do the two groups you chose to analyze have a different distribution of hours?
The distribution of hours is not clear nor evident when comparing groups

ii. Do the two groups you chose to analyze have a different number of reviews?
   The higher rated categories tend to have less reviews while the middle rated(barbeque) has the most reviews.  The law of large numbers would lead me to infer that barbeque spots are properly rated in Phoenix.      
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Seafood is highly rated in a desert city.  This makes a lot of sense since there are little reviews but high ratings since seafood is extremely hard to get in a scorching hot area.  In addition, most of the folks visiting the seafood spot might have never tasted fresh seafood thus giving it a glowing rating.


SQL code used for analysis:
select category, name, city, avg(stars)
from category
inner join business on category.business_id=business.id
    inner join hours on business.id=hours.business_id
where city='toronto'
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The AVG review for a business that is still open is .15 higher than the ones that are closed.
         
         
ii. Difference 2:
A store that is still open on average has 8 more reviews than a store that is closed.         
         
         
SQL code used for analysis:
select avg(stars), is_open
from business
group by is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         I would like to better understand the geographical distribution of restuarants and whether there is a significant difference between the avg review of restuarants by city.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
   I will need to take all the resturaunts, and take the avergae reviews/distribution of reviews, and grouping the data by city.  By looking at the average reviews and distribution  of the reviews we can get a sense of the accuracy and validity of the reviews. A city with a smaller cumulative reviews(less than 500)
might not be as accurate as one with a large amount of reviews.  I chose this data set because the process is fairly straight forward, but also because I want to test theory that large urbans have better food than small towns and regional eateries.  This experiment is also something I am personally curious about and
would love to learn a little more on the variation of star ratings by cities.                      
                  
iii. Output of your finished dataset:
         
+-----------------+-------+-------------+------------+-------------------+
| city            | state | category    | avg(stars) | number_of_reviews |
+-----------------+-------+-------------+------------+-------------------+
| Mesa            | AZ    | Restaurants |        4.5 |               396 |
| Charlotte       | NC    | Restaurants |       4.25 |                11 |
| Brampton        | ON    | Restaurants |        4.0 |                10 |
| Chesterland     | OH    | Restaurants |        4.0 |                30 |
| Cleveland       | OH    | Restaurants |        4.0 |               423 |
| Cuyahoga Falls  | OH    | Restaurants |        4.0 |                55 |
| Madison         | WI    | Restaurants |        4.0 |                 4 |
| Medina          | OH    | Restaurants |        4.0 |                94 |
| Middleton       | WI    | Restaurants |        4.0 |                37 |
| Oakville        | ON    | Restaurants |        4.0 |                55 |
| Scottsdale      | AZ    | Restaurants |        4.0 |                91 |
| Tolleson        | AZ    | Restaurants |        4.0 |                23 |
| Westlake        | OH    | Restaurants |        4.0 |               105 |
| Las Vegas       | NV    | Restaurants |      3.875 |              1062 |
| Aurora          | OH    | Restaurants |        3.5 |                32 |
| Chandler        | AZ    | Restaurants |        3.5 |               216 |
| Edinburgh       | EDH   | Restaurants |        3.5 |                44 |
| Fitchburg       | WI    | Restaurants |        3.5 |                74 |
| Fountain Hills  | AZ    | Restaurants |        3.5 |                21 |
| Inverness       | HLD   | Restaurants |        3.5 |                 3 |
| Litchfield Park | AZ    | Restaurants |        3.5 |                83 |
| Mississauga     | ON    | Restaurants |        3.5 |               160 |
| Murrysville     | PA    | Restaurants |        3.5 |                 3 |
| Paw Creek       | NC    | Restaurants |        3.5 |                 3 |
| Phoenix         | AZ    | Restaurants |        3.5 |               757 |
+-----------------+-------+-------------+------------+-------------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT city, state, category, avg(stars), sum(review_count) as number_of_reviews
from business
inner join category on business.id=category.business_id
where category like 'Restaurants'
group by city
order by avg(stars) desc